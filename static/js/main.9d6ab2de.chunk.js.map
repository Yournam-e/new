{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","useState","tabState","setTabState","header","mode","className","onClick","selected","stretched","size","tokenOrCallback","center","console","log","color","longitude","latitude","Persik","props","left","src","persik","alt","App","scheme","setScheme","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","fetchData","e","currentTarget","dataset","to","createRoot","document","getElementById","render"],"mappings":"6OAuHeA,EAlGF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YAGvB,EAAgCC,mBAAS,SAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAYA,OAEC,eAAC,IAAD,CAAOL,GAAIA,EAAX,UACA,cAAC,IAAD,wBACCE,GACD,cAAC,IAAD,CAAOI,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,8CAAf,SACC,eAAC,IAAD,CAAMC,UAAU,SAAhB,UACW,cAAC,IAAD,CACEC,QAAS,WAEpBJ,EAAY,UAEb,UAAQ,OACIK,SAAuB,UAAbN,EANZ,qEAWA,cAAC,IAAD,CACEK,QAAS,WAEpBJ,EAAY,oBAEb,UAAQ,OACIK,SAAuB,oBAAbN,EANZ,2FAaZ,cAAC,IAAD,CAAOE,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,gCAAf,SACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAQI,WAAS,EAACC,KAAK,IAAIL,KAAK,YAAYE,QAASR,EAAI,UAAQ,SAAjE,sBASF,qBAAKO,UAAU,MAAf,SASA,cAAC,IAAD,CAAKK,gBAAgB,iOAAiOC,OAAQ,CAAC,mBAAoB,mBAAnR,SACC,cAAC,IAAD,CAAQL,QAAS,WAAKM,QAAQC,IAAI,aAAcC,MAAM,UAAUC,UAAW,kBAC1EC,SAAU,4BCzFC,MAA0B,mCCwB1BC,G,OAhBA,SAAAC,GAAK,OACnB,eAAC,IAAD,CAAOrB,GAAIqB,EAAMrB,GAAjB,UACC,cAAC,IAAD,CACCsB,KAAM,cAAC,IAAD,CAAiBb,QAASY,EAAMpB,GAAI,UAAQ,SADnD,oBAKA,qBAAKO,UAAU,SAASe,IAAKC,EAAQC,IAAI,wBCoC5BC,EA3CH,WACX,MAA4BvB,mBAAS,gBAArC,mBAAOwB,EAAP,KAAeC,EAAf,KACA,EAAsCzB,mBAAS,QAA/C,mBAAO0B,EAAP,KAAoBC,EAApB,KACA,EAA+B3B,mBAAS,MAAxC,mBAAOD,EAAP,KAAoB6B,EAApB,KACA,EAA4B5B,mBAAS,cAAC,IAAD,CAAeS,KAAK,WAAzD,mBAAOoB,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WAAM,4CAOf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CAPe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACtB,yBAATD,GACHb,EAAUc,EAAKf,WAHF,mCAYfgB,KACE,IAEH,IAAM1C,EAAK,SAAA2C,GACVd,EAAec,EAAEC,cAAcC,QAAQC,KAGxC,OACC,cAAC,IAAD,CAAgBpB,OAAQA,EAAxB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAaK,OAAQA,EAArB,SACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAMH,YAAaA,EAAnB,UACC,cAAC,EAAD,CAAM7B,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,cAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,kBCnChCmC,IAAOC,KAAK,gBAECW,qBAAWC,SAASC,eAAe,SAE3CC,OACH,cAAC,EAAD,O","file":"static/js/main.9d6ab2de.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes, { func } from 'prop-types';\nimport { Map, Marker } from 'react-wrapper-mapkitjs';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, TabsItem, Tabs } from '@vkontakte/vkui';\n\n\nimport f from '../img/f.png';\nimport kek from '../img/keka.png'\n\n\n\n\n\n\n\nconst API_KEY = process.env.REACT_APP_API_KEY\n\n\n\n\nconst Home = ({ id, go, fetchedUser }) => {\n\n\n\tconst [tabState, setTabState] = useState('music')\n\n\n\tfunction goTo(){\n\t\t\n\t\tevent.target.setAttribute(\"data-sortorder\");\n\t}\n\n\n\n\n\n\treturn(\n\n\t\t<Panel id={id}>\n\t\t<PanelHeader>Examplese</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Tabs className='asasas'>\n              <TabsItem\n                onClick={()=>{\n\t\t\t\t\tgo\n\t\t\t\t\tsetTabState(\"music\")\n\t\t\t\t}}\n\t\t\t\tdata-to=\"home\"\n                selected={tabState === \"music\"}\n\t\t\t\t\n              >\n                Моя музыка\n              </TabsItem>\n              <TabsItem\n                onClick={()=>{\n\t\t\t\t\tgo\n\t\t\t\t\tsetTabState(\"recommendations\")\n\t\t\t\t}}\n\t\t\t\tdata-to=\"home\"\n                selected={tabState === \"recommendations\"}\n              >\n                Рекомендации\n              </TabsItem>\n\t\t\t  </Tabs>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tllol\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t\n\t\t</Group>\n\n\t\t\n\n\t\t<div className='ory'>\n\n\n\n\n\t\t\n\n\n\t\t\n\t\t<Map tokenOrCallback=\"eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkZRSzhEM0s4VjUifQ.eyJpc3MiOiJGOUMzNVo3TURWIiwiaWF0IjoxNjU0NzYwNTc3LCJleHAiOjE2ODYyNjg4MDB9.H_2lSyr73hPdfb30rKl6rEUtulLmDMrwTH1CoAfylmKE0cCWSk2MQO6lvwHp6_LtTKnmjOuFbMmOzG5Rczz4XA\" center={[30.321470209586717, 59.94662788335383]}>\n\t\t\t<Marker onClick={()=>{console.log('asasasas')}} color=\"#969696\" longitude={29.70087741494408}\n\t\t\t\tlatitude={60.01541240086453} />\n\t\t</Map>\n\n\n\n\n\n\t\t</div>\n\t\t\n\t\t\n\t\t\n\t</Panel>\n\n\t);\n\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport {createRoot} from \"react-dom/client\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nconst root = createRoot(document.getElementById(\"root\"))\n\nroot.render(\n  <App />\n);\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}